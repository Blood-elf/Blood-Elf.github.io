(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{258:function(e,r,a){e.exports=a.p+"assets/img/640-1567439087733.c8285e7c.png"},259:function(e,r,a){e.exports=a.p+"assets/img/640-1567439087740.681c8003.png"},350:function(e,r,a){"use strict";a.r(r);var s=a(0),t=Object(s.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"vue-项目优化（三）：web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目优化（三）：web","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 项目优化（三）：Web")]),e._v(" "),s("h2",{attrs:{id:"开启-gzip-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启-gzip-压缩","aria-hidden":"true"}},[e._v("#")]),e._v(" 开启 gzip 压缩")]),e._v(" "),s("p",[e._v("gzip 是 GNUzip 的缩写，最早用于 UNIX 系统的文件压缩。HTTP 协议上的 gzip 编码是一种用来改进 web 应用程序性能的技术，web 服务器和客户端（浏览器）必须共同支持 gzip。目前主流的浏览器，Chrome，firefox，IE等都支持该协议。常见的服务器如 Apache，Nginx，IIS 同样支持，gzip 压缩效率非常高，通常可以达到 70% 的压缩率，也就是说，如果你的网页有 30K，压缩之后就变成了 9K 左右。")]),e._v(" "),s("p",[e._v("以下我们以服务端使用我们熟悉的 express 为例，开启 gzip 非常简单，相关步骤如下：")]),e._v(" "),s("p",[e._v("安装：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm install compression --savebr\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("添加代码逻辑：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var compression = require('compression');var app = express();app.use(compression())br\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("重启服务，观察网络面板里面的 response header，如果看到如下红圈里的字段则表明 gzip 开启成功 ：")]),e._v(" "),s("p",[s("img",{attrs:{src:a(258),alt:"img"}})]),e._v(" "),s("h2",{attrs:{id:"浏览器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存","aria-hidden":"true"}},[e._v("#")]),e._v(" 浏览器缓存")]),e._v(" "),s("p",[e._v("为了提高用户加载页面的速度，对静态资源进行缓存是非常必要的，根据是否需要重新向服务器发起请求来分类，将 HTTP 缓存规则分为两大类（强制缓存，对比缓存），如果对缓存机制还不是了解很清楚的，可以参考作者写的关于 HTTP 缓存的文章《深入理解HTTP缓存机制及原理》，这里不再赘述。")]),e._v(" "),s("h2",{attrs:{id:"cdn-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn-的使用","aria-hidden":"true"}},[e._v("#")]),e._v(" CDN 的使用")]),e._v(" "),s("p",[e._v("浏览器从服务器上下载 CSS、js 和图片等文件时都要和服务器连接，而大部分服务器的带宽有限，如果超过限制，网页就半天反应不过来。而 CDN 可以通过不同的域名来加载文件，从而使下载文件的并发连接数大大增加，且CDN 具有更好的可用性，更低的网络延迟和丢包率 。")]),e._v(" "),s("h2",{attrs:{id:"使用-chrome-performance-查找性能瓶颈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-chrome-performance-查找性能瓶颈","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用 Chrome Performance 查找性能瓶颈")]),e._v(" "),s("p",[e._v("Chrome 的 Performance 面板可以录制一段时间内的 js 执行细节及时间。使用 Chrome 开发者工具分析页面性能的步骤如下。")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("打开 Chrome 开发者工具，切换到 Performance 面板")])]),e._v(" "),s("li",[s("p",[e._v("点击 Record 开始录制")])]),e._v(" "),s("li",[s("p",[e._v("刷新页面或展开某个节点")])]),e._v(" "),s("li",[s("p",[e._v("点击 Stop 停止录制")])])]),e._v(" "),s("p",[s("img",{attrs:{src:a(259),alt:"img"}})])])}),[],!1,null,null,null);r.default=t.exports}}]);